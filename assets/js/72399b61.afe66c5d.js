"use strict";(self.webpackChunkscholarsome=self.webpackChunkscholarsome||[]).push([[150],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(n),c=a,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||l;return n?r.createElement(k,o(o({ref:t},s),{},{components:n})):r.createElement(k,o({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={sidebar_position:1},p="Development Guide",d={unversionedId:"development/development-guide",id:"development/development-guide",title:"Development Guide",description:"For development, Scholarsome needs to be installed in a different way.",source:"@site/docs/development/development-guide.md",sourceDirName:"development",slug:"/development/development-guide",permalink:"/development/development-guide",draft:!1,editUrl:"https://github.com/hwgilbert16/scholarsome/tree/develop/apps/docs/docs/development/development-guide.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebar",previous:{title:"Installation",permalink:"/get-started/installation"}},s={},m=[],u={toc:m};function c(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"development-guide"},"Development Guide"),(0,l.kt)("p",null,"For development, Scholarsome needs to be installed in a different way."),(0,l.kt)("p",null,"Clone the repo and move into it."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"git clone https://github.com/hwgilbert16/scholarsome.git\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cd scholarsome\n")),(0,l.kt)("p",null,"Install dependencies."),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"--legacy-peer-deps")," must be passed to the installation command")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npm install --legacy-peer-deps\n")),(0,l.kt)("p",null,"Next, we'll need to setup the environment file. Make a copy of the development one and open it in your favorite file editor."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cp .env.example .env\n")),(0,l.kt)("p",null,"Below is a list of the required environment variables. Reference the ",(0,l.kt)("a",{parentName:"p",href:"/get-started/installation"},"installation guide")," for documentation with the optional ones."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Variable Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"NODE_ENV"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," Declares whether the application is running in development or production. Recommended to be set to ",(0,l.kt)("inlineCode",{parentName:"td"},"development")," for development purposes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DATABASE_URL"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," Connection string to the MySQL database. The format should be as follows: ",(0,l.kt)("inlineCode",{parentName:"td"},"mysql://(username):(password)@(host):(port)/(database)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JWT_SECRET"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," String used to encrypt cookies and other sensitive items. Select something strong, as you will not need to know this.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"HTTP_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," Port that Scholarsome with be accessible through. Recommended to be set to 80. If using SSL, set to 80, as another server will be spawned with port 443.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STORAGE_TYPE"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," The method that Scholarsome will store media files, either ",(0,l.kt)("inlineCode",{parentName:"td"},"local")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"s3"),". Recommended to be set to ",(0,l.kt)("inlineCode",{parentName:"td"},"local")," for development installations.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"REDIS_HOST"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," Host used to access the Redis database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"REDIS_PORT"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," Port used to access the Redis database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"REDIS_USERNAME"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," Username used to access the Redis database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"REDIS_PASSWORD"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Required.")," Password used to access the Redis database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STORAGE_LOCAL_DIR"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if storing files locally. The absolute filepath pointing to the directory where Scholarsome should store media files.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S3_STORAGE_ENDPOINT"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if storing files in S3. The endpoint of the S3 service.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S3_STORAGE_ACCESS_KEY"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if storing files in S3. Access key for the S3 service.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S3_STORAGE_ACCESS_KEY"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if storing files in S3. Secret key for the S3 service.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S3_STORAGE_ACCESS_KEY"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if storing files in S3. Region for the S3 service.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"S3_STORAGE_ACCESS_KEY"),(0,l.kt)("td",{parentName:"tr",align:null},"Required if storing files in S3. The name of the bucket being used in S3 to store media files.")))),(0,l.kt)("p",null,"Setup the database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npm run migrate\n")),(0,l.kt)("p",null,"Generate the local database files."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npm run generate\n")),(0,l.kt)("p",null,"The development environment is now setup. Start the development server."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npm run start:dev\n")),(0,l.kt)("p",null,"This may take a few moments as Angular builds for the first time. Scholarsome will be accessible at ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:4200")," once the URL is printed to the console by Angular."),(0,l.kt)("p",null,"Both the API (NestJS) and the frontend (Angular) will update automatically when file changes are saved."))}c.isMDXComponent=!0}}]);